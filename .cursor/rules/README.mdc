---
description: Vue 3 Cursor Rules - Practical development patterns
globs: 
alwaysApply: true
---

# Vue 3 Cursor Rules

Practical, concise rules for Vue 3 development using Composition API.

## Available Rules

### Core Patterns
- `vue-fundamentals.mdc` - Essential Vue 3 Composition API patterns
- `composables.mdc` - Reusable composition functions
- `pinia-stores.mdc` - State management with Pinia
- `vue-router.mdc` - Navigation and routing
- `typescript-patterns.mdc` - TypeScript integration
- `tailwind-patterns.mdc` - Tailwind CSS styling patterns

### Development Workflow
- `component-testing.mdc` - Testing with Vitest and Vue Test Utils
- `form-handling.mdc` - Form validation and submission
- `api-integration.mdc` - Data fetching and API services
- `project-structure.mdc` - Directory organization

## Features

- **Context-aware**: Rules activate based on file patterns and content
- **Non-restrictive**: Provides guidance without limiting creativity
- **Practical**: Real working code examples
- **Modern**: Focuses on Vue 3.4+ and Composition API

## Usage

Rules automatically activate when working with relevant files:
- `.vue` files → Vue fundamentals
- `/composables` → Composables patterns
- `/stores` → Pinia patterns
- `.test.ts` → Testing patterns
- `tailwind.config.*` → Tailwind patterns

---

*Efficient development assistance for Vue 3 projects*